% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regression-mediation.R
\name{Mediation}
\alias{Mediation}
\title{Mediation}
\usage{
Mediation(y_x, y_xm, m_x, y_inter_xm = NULL, data = NULL,
  caption = "", note = "", output = which_output(),
  include.parameter = TRUE, include.sobl = TRUE, z.transform = TRUE,
  X = model_info(m_x)$x, M = model_info(m_x)$y, type = "long2", ...)
}
\arguments{
\item{y_x}{Model y~x}

\item{y_xm}{Model y~x+m}

\item{m_x}{Model m~x}

\item{caption}{Ueberschrift}

\item{X}{EinflussvariaÂ´ble}

\item{M}{Moderator}

\item{type}{fuer Regression APA_Tabelle()}

\item{...}{not used}

\item{inter_xm}{Model y~x*m}
}
\value{
String (HTML)
}
\description{
Einfache Mediation und Moderationsanalyse mit Sobel-Test
Mediation ist gegeben wenn alle Modelle signifikant (1) und (4)
}
\details{
(1) Y~X
  (2) Y~X+M  (wenn hier M signifikant ist => partielle Mediation)
  (4) M~X

Moderation ist gegeben wenn die Interaktion (X:M) signifikant ist

(3) Y~ X + M + X:M
  
  Ein Beispiel mit Laavan findet sich unter
  https://paolotoffanin.wordpress.com/2017/05/06/multiple-mediator-analysis-with-lavaan/
}
\examples{
#' 
## https://paolotoffanin.wordpress.com/2017/05/06/multiple-mediator-analysis-with-lavaan/
## simpleMediation
#Projekt("html", "Test")
set.seed(1234)
Motivation <- rnorm(100)
Lerndauer <- 0.5 * Motivation + rnorm(100)
Note <- 0.7 * Lerndauer + rnorm(100)
dat <- data.frame(Note = Note,
                  Lerndauer = Lerndauer,
                  Motivation = Motivation)

dat <- stp25aggregate::Label(dat,
                             Note = "Note (Ziel-Variable)" ,
                             Lerndauer = "Lerndauer (Mediator)",
                             Motivation = "Motivation (Einfluss-Variable)")
Tabelle2(dat, Note, Lerndauer, Motivation)
Mediation(
  Note ~ Motivation,
  Note ~ Motivation + Lerndauer,
  Lerndauer ~ Motivation,
  Note ~ Motivation * Lerndauer,
  dat,
  digits = 2,
  caption = "Einfache Mediation und Moderationsanalyse mit Sobel-Test"
)

model <- ' # direct effect
Note ~ c*Motivation
# mediator
Lerndauer ~ a*Motivation
Note ~ b*Lerndauer
# indirect effect (a*b)
indir := a*b
# total effect
total := c + (a*b)
'

#xyplot(Note ~ value |
#         variable,
#       melt2(dat, Motivation, Lerndauer, by =  ~ Note))


fit <-  lavaan::sem(model, data = dat)
APA2(fit)
#End()
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/describe-rank.R
\name{Rangreihe}
\alias{Rangreihe}
\alias{APA2.rangreihe}
\alias{Rangreihe.formula}
\alias{Rangreihe.default}
\title{Rangreihe}
\usage{
Rangreihe(...)

\method{APA2}{rangreihe}(x, caption = "", note = "",
  output = which_output(), ...)

\method{Rangreihe}{formula}(x, data = NULL, order = TRUE, digits = 2,
  decreasing = TRUE, exclude = NA, subset, na.action = na.pass, ...)

\method{Rangreihe}{default}(items, grouping = NULL, order = TRUE,
  decreasing = TRUE, labels = NULL, RankByRow = if (is.factor(items[,
  1]) | is.character(items[, 1])) FALSE else TRUE, N = if
  (is.null(grouping)) nrow(items) else nrow(na.omit(grouping)), ...)
}
\arguments{
\item{...}{Weitere Argumente}

\item{x}{Objekt Vector oder auch Formel}

\item{caption, note, output}{an Output}

\item{data}{Objekt}

\item{order, decreasing}{sortieren}

\item{digits}{Nachkommastellen}

\item{exclude, subset, na.action}{an Formula_Data}

\item{items, grouping}{intern Rangreihe.default}

\item{labels}{intern Rangreihe.default}

\item{RankByRow}{Methode wie aufdroeseln}

\item{N}{Rangreihe.default}
}
\value{
Vector
}
\description{
Rangordnungen von Objekten koennen durch eine Transformation der Rangreihen in
Intervallskalierte Merkmale ueberfuehrt werden. Die Grundidee dieser Methode geht
auf Thurstone (1927) nach dem "Law of Categorical Judgement" zurueck.
}
\details{
Dabei werden
die kumulierten Haeufigkeiten in Normalverteilte z-Werte uebergefuehrt und aus diesen
die Intervallskalierten Markmalsauspraegungen gebildet.

Literatur: Bortz, J. & Doering, N. (2006). Forschungsmethoden und Evaluation fuer Human-und Sozialwissenschaftler (4. Auflage). Berlin: Springer. Seite 155
}
\examples{

#require(HH)

n <- 2 * 3 * 4 * 1

set.seed(n)
kaffee <- c(
  "Cubanischer Arabica Filter",
  "Cubanischer Arabica Kaltextrakt",
  "Dallmayr Prodomo Kaltextrakt",
  "Dallmayr Prodomo Filter"
)



DF <-
  data.frame(
    Geschlecht = gl(2, n / 2, labels = c("Maennlich", "Weiblich")),
    Alter = gl(4, n / 4,   labels = c("20-29", "30-39", "40-49", "50-59")),
    Konsum = gl(3, n / 3,   labels = c("weniger als 3 T.", "3 bis 6 T.", "mehr als 6 T.")),
    Kaffeeform = gl(3, n / 3, labels = c(
      "Espresso", "Filterkaffee", "Milchkaffee"
    )),
    FavA = gl(4, n / 4,  labels = kaffee)[sample.int(n)],
    FavB = gl(4, n / 4,  labels = kaffee)[sample.int(n)],
    FavC = gl(4, n / 4,  labels = kaffee)[sample.int(n)],
    FavD = gl(4, n / 4,  labels = kaffee)[sample.int(n)]
  )


#some(DF)
# Beispieldaten.Borz <-
#   matrix(c(
#      2,8,10,13,17,
#      5,10,15,18,2,
#      10,12,20,5,3,
#       15,20,10,3,2,
#       22,18,7,2,1)
#            , nrow = 5, ncol=5, byrow=TRUE,
#            dimnames = list(c("A", "B", "C", "D", "E"),1:5))
ans <- Rangreihe(~ FavA + FavB + FavC + FavD, DF)
APA2(ans, caption = "Alle")

ans <-
  Rangreihe(FavA + FavB + FavC + FavD ~ Geschlecht + Kaffeeform, DF)
APA2(ans, caption = "Alle")


#-- DF1 und DF2 sind identisc
DF1 <-  data.frame(
  A = c(1, 1, 1, 2, 3, 1),
  B = c(2, 2, 2, 3, 2, 3),
  C = c(3, 3, 3, 1, 1, NA),
  D = c(NA, NA, NA, NA, NA, 2)
)
DF2 <-   data.frame(
  R1 = factor(Hmisc::Cs(A, A, A, C, C, A)),
  R2 = factor(Hmisc::Cs(B, B, B, A, B, D)),
  R3 = factor(Hmisc::Cs(C, C, C, B, A, B))
)
Rangreihe(DF1)
Rangreihe(~ R1 + R2 + R3, DF2)
#windows(6,3)
#dotplot( reorder(Items, Skalenwert)~ Skalenwert|"Kaffeeform", ans$result, groups=Kaffeeform , xlab="",
#        xlim=range( ans$result$Skalenwert)*1.10 , auto.key=list(), cex=1)
#         SaveData("Kaffeeform")

}

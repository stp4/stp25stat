% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ICC.R, R/MetComp.R, R/T-test.R,
%   R/anova.R, R/correlation.R, R/describe-APA2.R, R/describe-likert.R,
%   R/describe-z-auto-test.R, R/dimred-pca.R, R/dimred-reliability.R,
%   R/kano.R, R/manova.R, R/regression-effsize.R, R/regression-polr.R,
%   R/regression-step.R, R/regression-typ1.R, R/regression-typ2.R,
%   R/test-multcomp.R, R/test-surv.R, R/xtab-xtabs.R
\name{APA2.ICC}
\alias{APA2.ICC}
\alias{APA2.bland_altman}
\alias{print.bland_altman}
\alias{APA2.htest}
\alias{APA2.pairwise.htest}
\alias{APA2.anova}
\alias{APA2.aov}
\alias{APA2.summary.aov}
\alias{APA2.aovlist}
\alias{Corr1}
\alias{Corr2}
\alias{APA2}
\alias{APA2.NULL}
\alias{APA2.default}
\alias{APA2.formula}
\alias{Recast2_fun}
\alias{APA2.likert}
\alias{errate_statistik2}
\alias{APA2.fa}
\alias{APA2.principal}
\alias{APA2.stp25_reliability}
\alias{APA2.Kano}
\alias{print.Kano}
\alias{APA2.manova}
\alias{APA2.lda}
\alias{APA2.eff}
\alias{APA2.efflist}
\alias{APA2.polr}
\alias{APA2.step}
\alias{APA2.durbinWatsonTest}
\alias{APA2.list}
\alias{APA2.lm}
\alias{APA2.glm}
\alias{APA2.lme}
\alias{APA2.lmerMod}
\alias{APA2.TukeyHSD}
\alias{APA2.glht}
\alias{APA2.multicomp}
\alias{APA2.summary.survfit}
\alias{APA2.survfit}
\alias{APA2.survdiff}
\alias{APA2.coxph}
\alias{APA2.loglm}
\alias{APA2.summary.table}
\alias{APA2.table}
\alias{APA2.xtabs}
\title{APA Style HTML-Tabellen-Ausgabe}
\usage{
\method{APA2}{ICC}(x, caption = "ICC", note = NULL, type = c(1, 4),
  output = which_output())

\method{APA2}{bland_altman}(x, caption = paste0("Difference (",
  x$name.diff, "), Mean (", x$name, ")"), note = "", ...)

\method{print}{bland_altman}(x)

\method{APA2}{htest}(x, caption = "", ...)

\method{APA2}{pairwise.htest}(x, caption = "", ...)

\method{APA2}{anova}(x, caption = gsub("\\\\n", "", paste(attr(x,
  "heading"), collapse = ", ")), note = paste("contrasts: ",
  paste(options()$contrasts, collapse = ", ")),
  output = stp25output::which_output(), include.eta = FALSE,
  include.sumsq = TRUE, include.meansq = FALSE, ...)

\method{APA2}{aov}(x, caption = "ANOVA", note = paste("contrasts: ",
  paste(options()$contrasts, collapse = ", ")),
  output = stp25output::which_output(), col_names = NULL, ...)

\method{APA2}{summary.aov}(x, caption = "ANOVA", note = "",
  output = stp25output::which_output(), col_names = NULL, ...)

\method{APA2}{aovlist}(x, output = stp25output::which_output(),
  col_names = NULL, ...)

Corr1(y, n = nrow(y), type = "pearson", include.p = FALSE,
  include.stars = TRUE, cor_diagonale_up = TRUE, dimnames = FALSE)

Corr2(x, y = NULL, type = "pearson", stars, ...)

APA2(x, ...)

\method{APA2}{NULL}(x, ...)

\method{APA2}{default}(x, ...)

\method{APA2}{formula}(x, data = NULL, caption = "", fun = NULL,
  type = c("auto", "freq", "mean", "median", "ci", "multiresponse",
  "cohen.d", "effsize", "freq.ci", "describe"), note = "",
  na.action = na.pass, test = FALSE, corr_test = "pearson",
  cor_diagonale_up = TRUE, direction = "long", order = FALSE,
  decreasing = TRUE, use.level = 1, include.n = TRUE,
  include.all.n = NULL, include.header.n = TRUE,
  include.total = FALSE, include.test = test, include.p = FALSE,
  include.stars = TRUE, include.names = FALSE, include.labels = TRUE,
  digits = NULL, digits.mean = if (!is.null(digits)) c(digits, digits)
  else NULL, digits.percent = if (is.null(digits))
  options()$stp25$apa.style$prozent$digits else c(digits, 0),
  output = which_output(), ...)

Recast2_fun(x, data, caption = "", fun, direction = "long",
  note = "", include.n = FALSE, ...)

\method{APA2}{likert}(x, caption = "", note = "",
  ReferenceZero = NULL, type = "percent", include.mean = TRUE,
  na.exclude = FALSE, labels = c("low", "neutral", "high"),
  order = FALSE, output = which_output(), ...)

errate_statistik2(Formula, data, caption = "caption", note = "note",
  type = NULL, na.action = na.pass, exclude = NA, include.n = TRUE,
  include.all.n = NULL, include.header.n = TRUE,
  include.total = FALSE, include.test = FALSE, include.p = TRUE,
  include.stars = FALSE, corr_test = "pearson",
  cor_diagonale_up = TRUE, max_factor_length = 35, order = FALSE,
  decreasing = FALSE, useconTest = FALSE, normality.test = FALSE,
  digits.mean = options()$stp25$apa.style$m$digits,
  digits.percent = options()$stp25$apa.style$prozent$digits[1],
  test_name = "Hmisc", ...)

\method{APA2}{fa}(...)

\method{APA2}{principal}(x, caption = "", note = "", digits = 2,
  all = FALSE, cut = 0.3, sort = TRUE, suppress.warnings = TRUE,
  ...)

\method{APA2}{stp25_reliability}(x, caption = "", note = "", ...)

\method{APA2}{Kano}(x, caption = "", note = NULL,
  output = which_output(), ...)

\method{print}{Kano}(x, ...)

\method{APA2}{manova}(x, test = "Wilks", caption = "MANOVA",
  note = "", output = c("anova", "manova"))

\method{APA2}{lda}(x, fit_predict = MASS:::predict.lda(x),
  newdata = model.frame(x), ...)

\method{APA2}{eff}(x, ...)

\method{APA2}{efflist}(x, caption = "Effekte: ", type = NULL,
  note = "", output = stp25output::which_output(), digits = 2,
  include.fit = TRUE, include.n = FALSE, include.ci = TRUE,
  include.se = FALSE, ...)

\method{APA2}{polr}(x, caption = NULL, note = NULL, include.b = TRUE,
  include.se = TRUE, include.ci = FALSE, include.odds = TRUE, ...)

\method{APA2}{step}(x,
  caption = "Backward elimination of non-significant effects of linear mixed effects model",
  note = "", include.se = FALSE, include.df = FALSE, ...)

\method{APA2}{durbinWatsonTest}(x,
  caption = "Durbin-Watson Test for Autocorrelated Errors",
  note = NULL, ...)

\method{APA2}{list}(...)

\method{APA2}{lm}(x, caption = NULL, note = NULL,
  output = stp25output::which_output(), col_names = NULL,
  include.b = TRUE, include.se = TRUE, include.beta = FALSE,
  include.ci = FALSE, include.r = TRUE, include.test = FALSE,
  ci.level = 0.95, test.my.fun = FALSE, conf.style.1 = TRUE, ...)

\method{APA2}{glm}(x, caption = NULL, note = NULL,
  output = stp25output::which_output(), col_names = NULL,
  include.b = TRUE, include.se = TRUE, include.ci = FALSE,
  include.odds = TRUE, include.odds.ci = include.ci,
  include.statistic = TRUE, include.p = TRUE, include.stars = FALSE,
  include.r = TRUE, include.pseudo = include.r, include.test = FALSE,
  include.rr = FALSE, include.rr.ci = include.ci, ci.level = 0.95,
  conf.method = "Wald", test.my.fun = FALSE, conf.style.1 = TRUE,
  digits = 2, ...)

\method{APA2}{lme}(...)

\method{APA2}{lmerMod}(x, caption = NULL, note = NULL,
  output = stp25output::which_output(), col_names = NULL,
  include.b = TRUE, include.se = TRUE, include.ci = FALSE,
  include.odds = FALSE, include.odds.ci = include.ci,
  include.statistic = TRUE, include.p = TRUE, include.stars = FALSE,
  include.r = TRUE, include.pseudo = include.r, include.test = FALSE,
  ci.level = 0.95, conf.method = "Wald", test.my.fun = FALSE,
  conf.style.1 = TRUE, digits = 2, ...)

\method{APA2}{TukeyHSD}(x, caption = " TukeyHSD", note = "",
  output = stp25output::which_output(), ...)

\method{APA2}{glht}(x, caption = "Multiple Comparisons of Means",
  note = "", output = stp25output::which_output(), include.ci = TRUE,
  level = 0.95, ...)

\method{APA2}{multicomp}(x, ...)

\method{APA2}{summary.survfit}(x, digits = NULL, percent = FALSE,
  include = c(time = "time", n.risk = "n.risk", n.event = "n.event", surv
  = "survival", std.err = "std.err", lower = "lower 95\% CI", upper =
  "upper 95\% CI"), ...)

\method{APA2}{survfit}(x, caption = "NULL", note = "", type = 1,
  digits = 2, ...)

\method{APA2}{survdiff}(x, caption = "Test Survival Curve Differences",
  note = "")

\method{APA2}{coxph}(x, caption = "", note = "", ...)

\method{APA2}{loglm}(x, caption = "Likelihood", note = "",
  output = stp25output::which_output(), col_names = NULL, ...)

\method{APA2}{summary.table}(x, ...)

\method{APA2}{table}(...)

\method{APA2}{xtabs}(x, caption = "", note = "",
  output = stp25output::which_output(), col_names = NULL,
  print_col = NULL, digits = NULL, test = FALSE, type = c("0",
  "fischer", "odds", "sensitivity", "chisquare", "correlation", "r"),
  include.total = FALSE, include.total.columns = include.total,
  include.total.sub = include.total,
  include.total.rows = include.total, include.percent = TRUE,
  include.count = TRUE, include.margins = TRUE, margin = NA,
  add.margins = NA, labels = NULL, ...)
}
\arguments{
\item{x}{Ein R Objekt oder eine Formel oder ein data.frame}

\item{caption, note}{Ueberschrift an Output}

\item{type}{formula: \code{c("auto", "freq", "mean", "median", "ci", "freq.ci")}
xtabs: type = c("fischer", "odds","sensitivity", "chisquare","correlation", "r")}

\item{output}{Ausgabe von Ergebiss ueber Output}

\item{...}{weitere Argumente}

\item{cor_diagonale_up}{bei Correlation art der Formatierung}

\item{data}{data.frame wenn x eine Formel ist}

\item{fun, na.action, direction}{eigene Funktion na.action=na.pass}

\item{test, include.test, corr_test, include.p, include.stars}{Sig test bei  \code{type = auto} moegliche Parameter sind  test=TRUE, test="conTest" oder "sapiro.test" fuer den Test auf Normalverteilung, fuer SPSS-like \code{test=="wilcox.test"}  oder \code{test=="kruskal.test"}
corr_test-ddefault ist  "pearson" c("pearson","spearman")}

\item{direction}{long or wide}

\item{order, decreasing}{Sortieren   Reihenfolge der Sortierung}

\item{use.level}{Benutzter level in Multi zB ja/nein}

\item{include.n, include.all.n, include.header.n, include.total}{N mit ausgeben}

\item{include.total, include.total.columns, include.total.sub, include.total.rows}{Zeilen Prozenz usw}

\item{include.names, include.labels}{Beschriftung der zeilen}

\item{digits}{digits}

\item{digits.mean, digits.percent}{Nachkommastellen}

\item{ReferenceZero, labels, na.exclude, labels, include.mean}{Likert: ReferenceZero=2 Neutrales Element in Kombination mit
labels = c("low", "neutral", "high")
 Mittelwerte T/F}

\item{max_factor_length, useconTest, normality.test, test_name, exclude, stars, Formula}{interne Parameter in erate_statistik}

\item{all}{APA2.principal if all=TRUE, then the object is declassed and all output from the function is printed}

\item{suppress.warnings}{APA2.principal Fehlermeldung unterdruecken}

\item{fit_predict}{lda: MASS predict.lda}

\item{newdata}{lda:model.frame}

\item{include.ci}{APA2.glht: Cis}

\item{include.se, include.ci, include.odds}{SE, 95-Ci, OR noch nicht fertig}

\item{include.df}{df mit ausgeben}

\item{include.r, include.pseudo}{pseudo R}

\item{ci.level}{Ci default 95 Prozent}

\item{include.percent, include.count}{ausgabe}

\item{include.margins}{sollen überhaupt Summen (margins) ausgegeben werden die Prozent werden aber wie mit den Margins gerechnet}

\item{margin, add.margins}{alternative zu include.total}

\item{custom.model.names}{Namen ner Modelle}

\item{include.custom}{liste mit Statistiken für Gofs also zB F-Tests}

\item{include.ftest, include.loglik}{noch nicht fertig}

\item{include.aic, include.bic}{geht nur zusammen}

\item{rgroup}{Zwischen Beschriftung}

\item{anova_type}{bei lme:  "F"  F-werte (wie SPSS) oder Chi (car::Anova)}

\item{caption, note, output, col_names, print_col, labels}{an Output}

\item{digits}{Nachkommastellen}

\item{test, type}{fischer chi usw}
}
\value{
html-String ueber cat sowi einen data.frame

liste mit data.frames

invisible data.frame und Output mit html/knit oder Text.

dataframe mit p.werte

list(xtab, test)
}
\description{
anova: APA2.aov(x, include.eta = TRUE)

Corr1() wird in in APA2 beim Einzelvergeich verwendet.

Die Interne Funktion  Corr2()  wird in APA2 verwendete um Korrelation zu berechnen.

APA2 erstellt fertigen HTML-Tabellen Output.

Die Funktion \code{APA2.formula} estellt die Standard-Tabellen (analog wie die Hmisc:summary).
 Links stehen die Zielvariablen rechts die Gruppen.

 Fie Formel  \code{a1 + a2[4] +a3 ~ group1 + group2} ergibt zwei Auswertungen. Die Zahle in eckiger Klammer
 sind die Nachkommastellen. Achtung die Formeln sind auf 500 zeichen begrenzt (Limitation von der Funktion \code{deparse()})
 Einstellungen werden global erstellt:

     \code{set_my_options(prozent=list(digits=c(1,0), style=2))}

     \code{get_my_options()$apa.style$prozent}

Likert type : c(1, 2), oder c("Freq", "Precent")

Errate korekte Auswertung und Extrahieren der Variablen aus Formula.

Kano Auswerten von Kano-Fragebogen.

MANOVA: APA2(x, , test="Wilks") test : "Wilks", "Pillai"

LDA (linear discriminants analysis) Erweiterung der MANOVA

Ordered Logistic or Probit Regression
https://stats.idre.ucla.edu/r/dae/ordinal-logistic-regression/

Methode für car::durbinWatsonTest Kopie von car:::print.durbinWatsonTest

Ausgabe von Regressions Tabelle nach der APA-Style vorgabe. Die Funktion
ist eine Kopie von  texreg:::aggregate.matrix.

APA2.glht  multcomp::glht
}
\examples{

#- ANOVA ---------
# op <- options(contrasts = c("contr.helmert", "contr.poly"))
# npk.aov <- aov(yield ~ block + N*P*K, npk)
#summary(npk.aov)
#coefficients(npk.aov)

#APA2(npk.aov, include.eta = FALSE)


#- One way repeated Measures ---------------------

#datafilename="http://personality-project.org/r/datasets/R.appendix3.data"
#data.ex3=read.table(datafilename,header=T)   #read the data into a table
# #data.ex3                                      #show the data

#aov.ex3 = aov(Recall~Valence+Error(Subject/Valence),data.ex3)
#
#APA2(aov.ex3)


#-- Corr1
# APA2(~a+b+cd, data)
#stp25stat:::Corr1(data[1:3], dimnames=TRUE)
#stp25stat:::Corr1(data[1:3], dimnames=TRUE, include.p=TRUE)

#-- Corr2
# APA2(a+b+c~d, data )
#stp25APA2:::Corr2(data[1:3], data[4], "pearson", TRUE)


#-- APA2.formula --
require(stp25data)
APA2(chol0+chol1 ~ g, hyper, print.n=FALSE)
APA2(~ g, hyper, caption="Einfache Tabelle")
APA2(chol0+chol1 ~ g, hyper, caption="Spalte mit Characteristik loeschen", print_col=-2)
APA2(gew + rrs0 ~ g, hyper, print.n=FALSE, test=TRUE)
APA2(~chol0+chol1~chol6+chol12, hyper, caption="Korrelation", test=TRUE)
APA2(~chol0+chol1+chol6+chol12, hyper, caption="Korrelation", test=TRUE, stars=FALSE)




#varana <- varana \%>\% Label(m1="Mesung1", m2="BMI")
x<-APA2( ~m1,varana)
x<-APA2( ~m1+m2,varana)

x<-APA2( m1~geschl,varana)
x<-APA2( m1+m2~alter,varana)
x<-APA2( m1+m2+geschl~alter,varana, include.test = TRUE)
x<-APA2( ~m1+m2+m3+m4,varana, test=TRUE)


#- manova ---------------------------------------------

## Set orthogonal contrasts.
op <- options(contrasts = c("contr.helmert", "contr.poly"))
## Fake a 2nd response variable
npk2 <- within(npk, foo <- rnorm(24))
npk2 <- within(npk2, foo2 <- rnorm(24))
npk2.aov <- manova(cbind(yield, foo, foo2) ~ block + N * P * K, npk2)
#x<-summary(npk2.aov)
APA2(npk2.aov) #wilks
APA2(npk2.aov, "Pillai")

#npk2.aovE <- manova(cbind(yield, foo) ~  N*P*K + Error(block), npk2)
#APA2(npk2.aovE)

require(stp25output)

 DF<-stp25aggregate::GetData(
"C:/Users/wpete/Dropbox/3_Forschung/R-Project/stp25data/extdata/manova.sav"
)

#information from
DF$GROUP<- factor(DF$GROUP, 1:3, Cs("website", "nurse ", "video tape" ))
#DF \%>\% Tabelle2(USEFUL, DIFFICULTY, IMPORTANCE, by=~GROUP )

z<- as.matrix(DF[,-1])
fit1<- manova(z ~ DF$GROUP)
APA2(fit1)
summary(fit1)$Eigenvalues

# SPSS
# Multivariate Tests of Significance (S = 2, M = 0, N = 13 )
#
# Test Name       Value  Approx. F Hypoth. DF   Error DF  Sig. of F
#
# Pillais          .48    3.02       6.00      58.00       .012
# Hotellings       .90    4.03       6.00      54.00       .002
# Wilks            .53    3.53       6.00      56.00       .005
# Roys             .47
# Note.. F statistic for WILKS' Lambda is exact.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Univariate F-tests with (2,30) D. F.
#
# Variable   Hypoth. SS   Error SS Hypoth. MS   Error MS          F  Sig. of F
#
# USEFUL       52.92424  293.96544   26.46212    9.79885    2.70053       .083
# DIFFICUL      3.97515  126.28728    1.98758    4.20958     .47216       .628
# IMPORTAN     81.82969  426.37090   40.91485   14.21236    2.87882       .072
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#   Eigenvalues and Canonical Correlations
#
# Root No.    Eigenvalue        Pct.   Cum. Pct.  Canon Cor.
#
# 1          .892      99.416      99.416        .687
# 2          .005        .584     100.000        .072
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -



#-- LDA -------------------------

library(MASS)
#fit2 <- lda(GROUP ~ ., data=DF )
#APA2(fit2)
#plot(fit2)

require(stp25output)


DF2<- stp25aggregate::GetData("C:/Users/wpete/Dropbox/3_Forschung/R-Project/stp25data/extdata/discrim.sav")
#--https://stats.idre.ucla.edu/spss/dae/discriminant-function-analysis/
DF2$Job <- factor(DF2$JOB, 1:3, Cs("customer service", "mechanic","dispatcher"))
DF2$Job2 <- factor(DF2$JOB, c(2,3,1), Cs( "mechanic","dispatcher","customer service"))

#APA2(.~JOB ,DF2)
#DF2 \%>\%  APA_Correlation(OUTDOOR,SOCIAL,CONSERVATIVE )

fit2 <- lda(Job ~ OUTDOOR+SOCIAL+CONSERVATIVE, data=DF2)
fit3 <- lda(Job2 ~ OUTDOOR+SOCIAL+CONSERVATIVE, data=DF2)

APA2(fit2)
APA2(fit3)

#' # Effekte / Mittelwerte
fit1 <- lm(chol0 ~  ak + rrs0 + med + g, hyper)
Tabelle2(fit1, digits = 2)  # mean SD

eff <- effects::allEffects(fit1)

APA2(eff)


 #--- Ordered Logistic or Probit Regression
 require(MASS)
 # options(contrasts = c("contr.treatment", "contr.poly"))
  house.plr <- MASS::polr(Sat ~ Infl + Type + Cont, weights = Freq, data = housing)
  APA2(house.plr, note= APA(house.plr))


# require(stpvers)

summary(lm1 <- lm(Fertility ~ ., data = swiss))
slm1 <- stats::step(lm1)
APA2(slm1)
# require(lmerTest)
 #m <- lmerTest::lmer(
 # Informed.liking ~ Product * Information * Gender +
#  (1 | Consumer) + (1 | Product:Consumer),
#  data = ham
# )
# elimination of non-significant effects
# s <- lmerTest::step(m)

# APA2(s)


library(lmerTest)

fit1 <- lm(chol0 ~  ak + rrs0 + med + g, hyper)
fit2 <- glm(chol0 ~ med +   ak +   g + rrs0 , hyper, family = poisson())
fit3 <- lmerTest::lmer(chol0 ~ rrs0 + med +  ak  +  (1|g) , hyper )
fits <- list(fit1, fit2, fit3)

APA2(fits,
          custom.model.names=c("lm", "glm", "lmer"),
          digits= list(c(1,2,3,4,5,6,7),
                       c(1,2,3,4,5,6,7),
                       c(1,2,3,4,5,6)),
          include.custom=list(
                       Wald=c("F(1)=245", "F(2)=245","F(3)=245"),
                       Chi=c("X(4)=2.45", "X(5)=24.5","X(6)=24.5")))


#----------------------------------------------------------------
# multcomp
#----------------------------------------------------------------
#require(graphics)
#
#-- breaks ~ wool + tension ----------------------
#warpbreaks \%>\% Tabelle2(breaks, by= ~ wool + tension)
summary(fm1 <- aov(breaks ~ wool + tension, data = warpbreaks))

#  ANOVA
APA2(fm1, caption="ANOVA")

# TukeyHSD
TukeyHSD(fm1, "tension", ordered = TRUE) \%>\%
  APA_Table(caption="TukeyHSD" )

#plot(TukeyHSD(fm1, "tension"))
#levels(warpbreaks$tension)

# Lm Split
fm1_split <-  summary(fm1,
                      split=list(tension=list( M=1,  H=3, L=2)),
                      expand.split=FALSE)
APA2(fm1_split)


# Multcomp
require(multcomp)

fit_Tukey <-glht(fm1,
                 linfct=mcp(tension="Tukey"),
                 alternative = "less"
) 
 
APA_Table(fit_Tukey, caption="APA_Table: multcomp mcp Tukey")

APA2(fit_Tukey, caption="APA2: multcomp mcp Tukey")



### contrasts for `tension'
K <- rbind("L - M" = c( 1, -1,  0),
           "M - L" = c(-1,  1,  0),
           "L - H" = c( 1,  0, -1),
           "M - H" = c( 0,  1, -1))

warpbreaks.mc <- glht(fm1,
                      linfct = mcp(tension = K),
                      alternative = "less")
APA2(warpbreaks.mc, caption="APA2: multcomp mcp mit Contrasten")
### correlation of first two tests is -1
cov2cor(vcov(fm1))

### use smallest of the two one-sided
### p-value as two-sided p-value -> 0.0232
summary(fm1)


# -- Interaction ------------------------
summary(fm2 <- aov(breaks ~ wool * tension, data = warpbreaks))
APA_Table(fm2)
x <- TukeyHSD(fm2, "tension",
              ordered = TRUE) 
APA2(x, caption="Interaction: TukeyHSD" )



warpbreaks$WW<-interaction(warpbreaks$wool,warpbreaks$tension )
mod2<-aov(breaks~WW, warpbreaks)
APA2(mod2, caption="ANOVA interaction haendich zu den Daten hinzugefuehgt")



library(multcomp)
 ### multiple linear model, swiss data
 lmod <- lm(Fertility ~ ., data = swiss)

 ### test of H_0: all regression coefficients are zero
 ### (ignore intercept)

### define coefficients of linear function directly
K <- diag(length(coef(lmod)))[-1,]
rownames(K) <- names(coef(lmod))[-1]
K
### set up general linear hypothesis
APA2(glht(lmod, linfct = K))


# Fit Log-Linear Models by Iterative Proportional Scaling
library(MASS)

fit<-loglm(~ Type + Origin, xtabs(~ Type + Origin, Cars93))
APA2(fit)
#-- APA2.summary.table

a <- letters[1:3]
APA2(summary(table(a, sample(a))))
}
